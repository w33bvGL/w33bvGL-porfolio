<?php

declare(strict_types=1);

namespace App\Http\Controllers\Api\V1;

use App\Http\Controllers\Controller;
use App\Http\Services\Api\V1\TelegramService;
use App\Http\Requests\Api\V1\TelegramContactFormRequest;
use Illuminate\Http\JsonResponse;

class TelegramContactFormController extends Controller
{
    private TelegramService $telegramService;

    public function __construct(TelegramService $telegramService)
    {
        $this->telegramService = $telegramService;
    }

    public function send(TelegramContactFormRequest $request): JsonResponse
    {
        $data = $request->validated();

        $ipAddress = $request->ip();
        $userAgent = $request->userAgent();
        $locale    = $request->getPreferredLanguage();

        $text = "üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞\n\n".
            "üë§ –ò–º—è: {$data['name']}\n".
            "üìß Email: {$data['email']}\n".
            "üåç IP –ê–¥—Ä–µ—Å: {$ipAddress}\n".
            "üåê –Ø–∑—ã–∫: {$locale}\n".
            "üñ•Ô∏è User-Agent: {$userAgent}\n".
            "üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {$data['message']}\n";

        if (!$this->telegramService->sendMessage($text)) {
            return response()->json(['success' => false, 'message' => '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram.'], 500);
        }

        return response()->json(['success' => true, 'message' => '–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!']);
    }
}
