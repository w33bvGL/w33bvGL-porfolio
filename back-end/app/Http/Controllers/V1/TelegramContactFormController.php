<?php

declare(strict_types=1);

namespace App\Http\Controllers\V1;

use App\Http\Controllers\Controller;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;

class TelegramContactFormController extends Controller
{
    public function send(Request $request): JsonResponse
    {
        $data = $request->validate([
            'name' => 'required|string|max:255',
            'email' => 'required|email',
            'message' => 'required|string',
        ]);

        $telegramToken = env('TELEGRAM_BOT_TOKEN');
        $chatId        = env('TELEGRAM_CHAT_ID');

        $text = "üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞\n\n".
            "üë§ –ò–º—è: {$data['name']}\n".
            "üìß Email: {$data['email']}\n".
            "üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {$data['message']}";

        $response = Http::post("https://api.telegram.org/bot{$telegramToken}/sendMessage", [
            'chat_id' => $chatId,
            'text' => $text,
            'parse_mode' => 'HTML',
        ]);

        if ($response->failed()) {
            return response()->json(['success' => false, 'message' => '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram.'], 500);
        }

        return response()->json(['success' => true, 'message' => '–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!']);
    }
}
